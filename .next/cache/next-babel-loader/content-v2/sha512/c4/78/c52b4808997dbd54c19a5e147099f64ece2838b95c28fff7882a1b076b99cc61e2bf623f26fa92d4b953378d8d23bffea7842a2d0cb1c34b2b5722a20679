{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/goatbass/Desktop/Web_Developer/React/nextjs-project/pages/[meetupId]/index.js\",\n    _this = this;\n\n//our-domain.com/\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nvar MeetUpDetails = function MeetUpDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"\",\n        content: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 15\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, _this);\n};\n\n_c = MeetUpDetails;\nexport var __N_SSG = true;\nexport default MeetUpDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetUpDetails\");","map":{"version":3,"sources":["/Users/goatbass/Desktop/Web_Developer/React/nextjs-project/pages/[meetupId]/index.js"],"names":["Fragment","Head","MeetupDetail","MeetUpDetails","props","meetupData","title","image","address","description"],"mappings":";;;;;AAAA;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAGA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AACE,QAAA,IAAI,EAAC,EADP;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAQI,QAAC,YAAD;AACI,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAD5B;AAEI,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBC,KAF5B;AAGI,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBG,OAH9B;AAII,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJlC;AAAA;AAAA;AAAA;AAAA,aARJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAiBD,CAlBD;;KAAMN,a;;AAgEN,eAAeA,aAAf","sourcesContent":["//our-domain.com/\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport { MongoClient, ObjectId } from 'mongodb';\n\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst MeetUpDetails = (props) => {\n  return (\n      <Fragment>\n          <Head>\n              <title>{props.meetupData.title}</title>\n              <meta \n                name=''\n                content=''\n              />\n          </Head>\n          <MeetupDetail \n              image={props.meetupData.image} \n              title={props.meetupData.title}\n              address={props.meetupData.address}\n              description={props.meetupData.description}\n          />\n      </Fragment>\n  );\n};\n\nexport async function getStaticPaths() {\n\n    const client = await MongoClient.connect('mongodb+srv://eduard:GoatBass94@cluster0.wi5u6.mongodb.net/meetups?retryWrites=true&w=majority')\n\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\n\n    client.close();\n\n    return {\n        fallback: false,\n        paths: meetups.map(meetup => ({ params: { meetupId: meetup._id.toString() } }))\n    };\n}\n\nexport async function getStaticProps(context) {\n    const meetupId = context.params.meetupId;\n\n    const client = await MongoClient.connect('mongodb+srv://eduard:GoatBass94@cluster0.wi5u6.mongodb.net/meetups?retryWrites=true&w=majority')\n\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const selectedMeetup = await meetupsCollection.findOne({_id: ObjectId(meetupId)});\n\n    client.close();\n\n    return {\n        props: {\n            meetupData: {\n                id: selectedMeetup._id.toString(),\n                title: selectedMeetup.title,\n                address: selectedMeetup.address,\n                image: selectedMeetup.image,\n                description: selectedMeetup.description\n            }\n        }\n    }\n}\n\nexport default MeetUpDetails;\n"]},"metadata":{},"sourceType":"module"}